{
  "baseUrl": "http://localhost:7322",
  "logging": {
    "enabled": true,
    "level": "INFO",
    "handlers": ["console", "file"],
    "file_settings": {
      "directory": "./logs",
      "max_size_mb": 50,
      "rotation_count": 5,
      "format": "both"
    },
    "console_settings": {
      "format": "text",
      "colorize": true
    },
    "categories": {
      "playwright_action": "DEBUG",
      "api_call": "INFO",
      "browser_console": "WARNING",
      "test_lifecycle": "INFO",
      "test_step": "INFO"
    },
    "filters": {
      "exclude_urls": ["/health", "/metrics"],
      "sanitize_fields": ["password", "token", "credential", "secret"]
    }
  },
  "login": {
    "credentials": {
      "email": "admin@rediacc.io",
      "password": "admin"
    },
    "timeouts": {
      "navigation": 10000,
      "element": 5000,
      "network": 5000
    }
  },
  "browser": {
    "headless": false,
    "slowMo": 0,
    "viewport": {
      "width": 1280,
      "height": 720
    }
  },
  "screenshots": {
    "enabled": true,
    "path": "./screenshots"
  },
  "validation": {
    "dashboardUrl": "**/console/dashboard",
    "expectedElements": [
      {
        "selector": "h2:has-text('Dashboard')",
        "description": "Dashboard heading"
      },
      {
        "selector": "text=Account Health",
        "description": "Account Health section"
      }
    ],
    "userEmailSelector": "text=${email}"
  },
  "createRepo": {
    "machineName": "rediacc11",
    "repositoryNamePrefix": "repo",
    "repositorySize": "1",
    "template": "nginx",
    "generatePassword": true,
    "keepOpenAfterCreation": true,
    "queueTimeout": 120000,
    "timeouts": {
      "navigation": 10000,
      "element": 5000,
      "modalOpen": 3000,
      "creation": 15000
    },
    "successIndicators": [
      "Task Completed Successfully",
      "Repository created successfully",
      "Repository \".*\" created successfully"
    ]
  },
  "repoActions": {
    "machineName": "rediacc11",
    "defaultRepository": "repo03",
    "actions": {
      "up": "up",
      "down": "down",
      "push": "push"
    },
    "timeouts": {
      "navigation": 10000,
      "element": 5000,
      "queueCompletion": 60000
    },
    "successIndicators": [
      "Task Completed Successfully",
      "Repository started successfully",
      "Repository services started"
    ],
    "failureIndicators": [
      "Task Failed",
      "Bridge reported failure",
      "Failed to start repository"
    ]
  },
  "registration": {
    "company": "rediacc",
    "email": "test_${timestamp}@rediacc.com",
    "password": "87654321i_",
    "activationCode": "111111"
  },
  "ui": {
    "languageDropdownSelector": ".ant-select-selector",
    "languageDropdownOptionsSelector": ".ant-select-dropdown",
    "languageSelector": "ðŸ‡«ðŸ‡· FranÃ§ais",
    "loginLinkText": "Login",
    "registerLinkTestId": "login-register-link",
    "companyInputTestId": "registration-company-input",
    "emailInputTestId": "registration-email-input",
    "passwordInputTestId": "registration-password-input",
    "passwordConfirmInputTestId": "registration-password-confirm-input",
    "submitButtonTestId": "registration-submit-button",
    "activationCodeInputTestId": "registration-activation-code-input",
    "verifyButtonTestId": "registration-verify-button"
  },
  "timeouts": {
    "pageLoad": 30000,
    "networkIdle": "networkidle",
    "elementVisible": 5000,
    "apiResponse": 10000
  },
  "registrationValidation": {
    "successMessages": {
      "registrationSuccess": "Registration successful! Please check your email for the activation code.",
      "activationSuccess": "Account activated successfully!",
      "registrationComplete": "Registration Complete!"
    },
    "errorMessages": {
      "userExists": "User with email .* already exists.",
      "invalidCode": "Invalid activation code",
      "networkError": "Network error"
    }
  },
  "repoEdit": {
    "repository": {
      "targetRepoName": "repo_edited_${timestamp}",
      "accessPassword": "Test@1234$Pass#2024"
    },
    "ui": {
      "loginEmailTestId": "login-email-input",
      "loginPasswordTestId": "login-password-input",
      "loginSubmitButtonTestId": "login-submit-button",
      "resourcesMenuTestId": "main-nav-resources",
      "resourcesMenuText": "Resources",
      "repositoriesTabTestId": "resources-tab-repositories",
      "repositoryEditButtonPrefix": "resources-repository-edit-",
      "repositoryNameInputTestId": "resource-modal-field-repositoryName-input",
      "modalOkButtonTestId": "resource-modal-ok-button",
      "modalCancelButtonTestId": "resource-modal-cancel-button",
      "accessPasswordInputSelector": "[data-testid*='credential'] input[type='password'], input[placeholder*='Access Password']"
    },
    "validation": {
      "successMessages": {
        "repositoryUpdated": "Repository updated successfully",
        "savedSuccessfully": "Saved successfully",
        "updateComplete": "Update complete"
      },
      "errorMessages": {
        "validationError": "Validation Errors:",
        "passwordRequired": "Access Password is required",
        "networkError": "Network error",
        "saveError": "Failed to save"
      },
      "toastSelectors": [
        ".ant-message",
        ".ant-notification",
        "[role='alert']",
        ".toast-success",
        ".notification-success"
      ]
    }
  },
  "repoDown": {
    "ui": {
      "loginEmailTestId": "login-email-input",
      "loginPasswordTestId": "login-password-input",
      "loginSubmitButtonTestId": "login-submit-button",
      "resourcesMenuTestId": "main-nav-resources",
      "resourcesMenuText": "Resources",
      "machineExpandTestId": "machine-expand-",
      "remoteButtonTestId": "machine-repo-list-repo-actions-",
      "localDropdownTestId": "local-actions-dropdown-",
      "queueTraceCloseTestId": "queue-trace-close-button"
    },
    "test": {
      "targetMachine": "rediacc11",
      "targetRepositoryPattern": "repo_",
      "targetRepository": "repo006",
      "targetAction": "down",
      "alternativeActions": ["Down", "Stop", "Shutdown"]
    },
    "timeouts": {
      "pageLoad": 10000,
      "networkIdle": 5000,
      "elementWait": 5000,
      "actionDelay": 1000
    },
    "validation": {
      "checkForSuccessToast": true,
      "verifyQueueDialog": false,
      "screenshotOnError": true
    },
    "queueTimeout": 10000
  },
  "repoPush": {
    "ui": {
      "loginEmailTestId": "login-email-input",
      "loginPasswordTestId": "login-password-input",
      "loginSubmitButtonTestId": "login-submit-button",
      "resourcesMenuTestId": "main-nav-resources",
      "machineExpandTestId": "machine-expand-",
      "remoteButtonTestId": "machine-repo-list-repo-actions-",
      "functionModalSubmitTestId": "function-modal-submit",
      "queueTraceCloseTestId": "queue-trace-close-button"
    },
    "test": {
      "sourceMachine": "rediacc11",
      "targetMachine": "rediacc12",
      "repositoryName": "repo006",
      "pushAction": "push",
      "destinationType": "machine",
      "pushOptions": {
        "overrideExisting": false,
        "requireOnlineState": true
      }
    },
    "timeouts": {
      "pageLoad": 10000,
      "networkIdle": 5000,
      "elementWait": 5000,
      "actionDelay": 1000,
      "pushOperation": 60000
    },
    "validation": {
      "checkForSuccessToast": true,
      "expectedToastMessages": [
        "Repository creation queued successfully",
        "Repository \"*\" created successfully"
      ],
      "verifyQueueTrace": true,
      "screenshotOnError": true
    }
  },
  "storageImport": {
    "confFile": "conf.conf",
    "targetMachine": "rediacc11",
    "targetRepository": "repo03",
    "targetStorage": "microsoft",
    "pushDestinationType": "storage",
    "ui": {
      "loginLink": "header-login-link",
      "navResources": "nav-resources",
      "storageTab": "resources-tab-storage",
      "importButton": "resources-import-button",
      "uploadDragger": "rclone-wizard-upload-dragger",
      "importConfirm": "rclone-wizard-import-button",
      "closeImport": "rclone-wizard-close-button",
      "navMachines": "nav-machines",
      "machineRow": "machine-row-",
      "repoButton": "machine-repositories-button-",
      "pushAction": "repo-action-push",
      "storageSelector": "push-storage-selector",
      "storageSelection": "push-storage-selection",
      "addToQueue": "push-add-to-queue-button",
      "queueTraceClose": "queue-trace-modal-close-button"
    },
    "validation": {
      "successMessages": {
        "importSuccess": "Storage imported successfully",
        "queueSuccess": "Repository creation queued successfully",
        "pushConfigured": "Push configured successfully"
      },
      "conflictMessages": {
        "storageExists": "already exists",
        "importConflict": "conflict"
      }
    },
    "timeouts": {
      "modalOpen": 3000,
      "fileUpload": 5000,
      "importProcess": 10000,
      "queueCreation": 5000,
      "elementWait": 5000
    }
  },
  "repoUp": {
    "test": {
      "targetMachine": "rediacc11",
      "targetRepository": "repo03",
      "action": "up"
    },
    "ui": {
      "loginEmailTestId": "login-email-input",
      "loginPasswordTestId": "login-password-input",
      "loginSubmitButtonTestId": "login-submit-button",
      "resourcesMenuTestId": "main-nav-resources",
      "resourcesMenuText": "Resources",
      "machineExpandPrefix": "machine-expand-",
      "machineRemotePrefix": "machine-remote-",
      "repoActionsPrefix": "machine-repo-list-repo-actions-",
      "queueTraceCloseTestId": "queue-trace-close-button",
      "upActionText": "up",
      "closeButtonText": "Close"
    },
    "validation": {
      "successMessages": {
        "queueCreated": "Repository creation queued successfully",
        "taskCompleted": "Task Completed Successfully",
        "repositoryStarted": "Repository started successfully"
      },
      "failureMessages": {
        "setupFailed": "Repository setup failed",
        "exitCode": "exit code"
      },
      "taskStates": {
        "pending": "PENDING",
        "assigned": "Assigned",
        "processing": "Processing", 
        "completed": "Completed",
        "failed": "Failed"
      }
    },
    "timeouts": {
      "pageLoad": 10000,
      "networkIdle": 5000,
      "elementWait": 5000,
      "queueCompletion": 30000
    }
  },
  "repoDelete": {
    "test": {
      "targetRepository": null,
      "targetIndex": 0,
      "deleteByName": false
    },
    "ui": {
      "loginEmailTestId": "login-email-input",
      "loginPasswordTestId": "login-password-input",
      "loginSubmitButtonTestId": "login-submit-button",
      "resourcesMenuTestId": "main-nav-resources",
      "repositoriesTabTestId": "resources-tab-repositories",
      "deleteButtonPrefix": "resources-repository-delete-",
      "modalSelector": "div[role='dialog']",
      "modalContentSelector": "div.ant-modal-confirm-content",
      "deleteConfirmButtonSelector": "button.ant-btn-dangerous"
    },
    "validation": {
      "successMessages": [
        "Repository deleted successfully",
        "Repository '{name}' deleted successfully",
        "Repository \"{name}\" deleted successfully"
      ],
      "notificationSelectors": [
        ".ant-message",
        ".ant-notification",
        "[role='alert']"
      ],
      "confirmationTexts": [
        "Are you sure you want to delete repository",
        "This action cannot be undone"
      ]
    },
    "timeouts": {
      "pageLoad": 10000,
      "elementWait": 5000,
      "modalWait": 5000,
      "notificationWait": 5000,
      "networkIdle": 5000
    }
  }
}