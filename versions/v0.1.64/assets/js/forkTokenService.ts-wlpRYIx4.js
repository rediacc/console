const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-Bu45qnZk.js","assets/js/chunk-DXw4Pgvm.js","assets/js/chunk-DZuWtVpy.js","assets/js/chunk-BNqsZZGB.js","assets/js/chunk-C0XEpv6B.js","assets/js/chunk-CM3g5OHp.js","assets/js/chunk-CSjZqX98.js","assets/index-BH1DZEKv.css"])))=>i.map(i=>d[i]);
import{_ as t}from"./chunk-C0XEpv6B.js";import{a3 as e}from"../index-Bu45qnZk.js";import"./chunk-DZuWtVpy.js";import"./chunk-DXw4Pgvm.js";import"./chunk-BNqsZZGB.js";import"./chunk-CM3g5OHp.js";import"./chunk-CSjZqX98.js";class r{static instance;FORK_TOKEN_PREFIX="fork_token_";DEFAULT_EXPIRATION_HOURS=2;constructor(){}static getInstance(){return r.instance||(r.instance=new r),r.instance}async createForkToken(t,r=this.DEFAULT_EXPIRATION_HOURS){const n=`desktop-${t}-${Date.now()}`;try{const o=await this.callForkAuthenticationRequest(n,r),a=o.nextRequestToken,s=o.parentRequestId;if(!a)throw new Error("Failed to create fork token: No token returned");const i={token:a,expiresAt:Date.now()+60*r*60*1e3,parentRequestId:s,name:n},c=`${this.FORK_TOKEN_PREFIX}${t}`;return await e.setItem(c,JSON.stringify(i)),a}catch(o){throw new Error(`Failed to create fork token: ${o instanceof Error?o.message:"Unknown error"}`)}}async getForkToken(t){const r=`${this.FORK_TOKEN_PREFIX}${t}`,n=await e.getItem(r);if(!n)return null;try{const t=JSON.parse(n);return Date.now()>=t.expiresAt?(e.removeItem(r),null):t.token}catch(o){return e.removeItem(r),null}}async getOrCreateForkToken(t,e=this.DEFAULT_EXPIRATION_HOURS){const r=await this.getForkToken(t);return r||await this.createForkToken(t,e)}async createFreshForkToken(t,r=this.DEFAULT_EXPIRATION_HOURS){const n=`${this.FORK_TOKEN_PREFIX}${t}`,o=await e.getItem(n);if(o){try{JSON.parse(o)}catch(a){}await e.removeItem(n)}return await this.createForkToken(t,r)}clearAllForkTokens(){e.keys().forEach(t=>{t.startsWith(this.FORK_TOKEN_PREFIX)&&e.removeItem(t)})}async clearExpiredForkTokens(){const t=e.keys(),r=Date.now();for(const o of t)if(o.startsWith(this.FORK_TOKEN_PREFIX))try{const t=await e.getItem(o);if(t){r>=JSON.parse(t).expiresAt&&e.removeItem(o)}}catch(n){e.removeItem(o)}}async callForkAuthenticationRequest(e,r){const{apiClient:n}=await t(async()=>{const{apiClient:t}=await import("../index-Bu45qnZk.js").then(t=>t.a5);return{apiClient:t}},__vite__mapDeps([0,1,2,3,4,5,6,7])),o=await n.post("/ForkAuthenticationRequest",{childName:e,tokenExpirationHours:r}),a=o.resultSets?.find(t=>"Credentials"===t.resultSetName);if(!a?.data?.[0])throw new Error("Fork token data not found in API response");return a.data[0]}}const n=r.getInstance(),o=(t,e)=>n.createFreshForkToken(t,e);export{o as createFreshForkToken,n as forkTokenService};
