{
  "entities": {
    "MACHINE": {
      "descriptionKey": "fields.MACHINE.description",
      "required": ["ip", "user", "datastore", "ssh_key_configured", "ssh_password"],
      "optional": ["port", "host_entry"],
      "fields": {
        "ip": {
          "type": "string",
          "format": "ipv4",
          "example": "192.168.1.100"
        },
        "user": {
          "type": "string",
          "example": "ubuntu"
        },
        "datastore": {
          "type": "string",
          "example": "/mnt/datastore"
        },
        "port": {
          "type": "number",
          "example": 22
        },
        "host_entry": {
          "type": "string",
          "example": "192.168.1.100 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC..."
        },
        "ssh_key_configured": {
          "type": "boolean",
          "example": false
        },
        "ssh_password": {
          "type": "string",
          "sensitive": true,
          "example": "SecurePassword123!"
        }
      }
    },
    "REPOSITORY": {
      "descriptionKey": "fields.REPOSITORY.description",
      "required": ["credential"],
      "optional": [],
      "fields": {
        "credential": {
          "type": "string",
          "pattern": "^[A-Za-z0-9!@#$%^&*()_+{}|:<>,.?/]{32}$",
          "minLength": 16,
          "maxLength": 256,
          "example": "Kj8#mP2$vL9@nQ4&xR7!wE3*tY6^aS1+"
        }
      }
    },
    "BRIDGE": {
      "descriptionKey": "fields.BRIDGE.description",
      "required": [],
      "optional": [],
      "fields": { }
    },
    "STORAGE": {
      "descriptionKey": "fields.STORAGE.entityDescription",
      "required": ["provider"],
      "optional": ["description", "noVersioning", "parameters"],
      "dynamicFields": true,
      "providerSchema": "storageProviders.json",
      "fields": {
        "provider": {
          "type": "string",
          "enum": [
            "s3",
            "azureblob",
            "azurefiles",
            "b2",
            "box",
            "cloudinary",
            "drive",
            "dropbox",
            "fichier",
            "filefabric",
            "filescom",
            "ftp",
            "gcs",
            "gofile",
            "googlephotos",
            "hdfs",
            "hidrive",
            "http",
            "iclouddrive",
            "imagekit",
            "internetarchive",
            "jottacloud",
            "koofr",
            "linkbox",
            "local",
            "mailru",
            "mega",
            "netstorage",
            "onedrive",
            "opendrive",
            "oracleobjectstorage",
            "pcloud",
            "pikpak",
            "premiumizeme",
            "protondrive",
            "putio",
            "qingstor",
            "quatrix",
            "seafile",
            "sftp",
            "sharefile",
            "sia",
            "smb",
            "storj",
            "sugarsync",
            "swift",
            "ulozto",
            "uptobox",
            "webdav",
            "yandex",
            "zoho"
          ],
          "example": "s3",
          "description": "Storage provider type"
        },
        "description": {
          "type": "string",
          "example": "Primary backup storage for production data",
          "description": "Optional description of this storage configuration"
        },
        "noVersioning": {
          "type": "boolean",
          "description": "Disable versioning for this storage"
        },
        "parameters": {
          "type": "string",
          "example": "--transfers 4 --checkers 8",
          "description": "Additional rclone parameters"
        }
      }
    },
    "SCHEDULE": {
      "descriptionKey": "fields.SCHEDULE.description",
      "required": ["cron", "task"],
      "optional": ["timezone", "notifications", "retry"],
      "fields": {
        "cron": {
          "type": "string",
          "example": "0 2 * * *"
        },
        "task": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["backup", "restore", "sync", "cleanup"]
            },
            "target": {
              "type": "string"
            },
            "options": {
              "type": "object"
            }
          }
        },
        "timezone": {
          "type": "string",
          "example": "America/New_York"
        },
        "notifications": {
          "type": "object",
          "properties": {
            "onSuccess": {
              "type": "boolean"
            },
            "onFailure": {
              "type": "boolean"
            },
            "channels": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["email", "webhook", "slack"]
              }
            }
          }
        },
        "retry": {
          "type": "object",
          "properties": {
            "attempts": {
              "type": "number"
            },
            "interval": {
              "type": "number"
            }
          }
        }
      }
    },
    "REGION": {
      "descriptionKey": "fields.REGION.description",
      "required": [],
      "optional": ["code", "location"],
      "fields": {
        "code": {
          "type": "string",
          "pattern": "^[a-z]{2}-[a-z]+-[0-9]$",
          "example": "us-east-1"
        },
        "location": {
          "type": "object",
          "properties": {
            "country": {
              "type": "string",
              "example": "US"
            },
            "city": {
              "type": "string",
              "example": "Virginia"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            }
          }
        }
      }
    },
    "TEAM": {
      "descriptionKey": "fields.TEAM.description",
      "required": ["SSH_PRIVATE_KEY", "SSH_PUBLIC_KEY"],
      "optional": [],
      "fields": {
        "SSH_PRIVATE_KEY": {
          "type": "string",
          "sensitive": true,
          "format": "base64",
          "example": "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K..."
        },
        "SSH_PUBLIC_KEY": {
          "type": "string",
          "pattern": "^(ssh-rsa|ssh-ed25519|ecdsa-sha2-nistp256|ecdsa-sha2-nistp384|ecdsa-sha2-nistp521) [A-Za-z0-9+/=]+ .+$",
          "example": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC... team-devops"
        }
      }
    },
    "USER": {
      "descriptionKey": "fields.USER.description",
      "required": [],
      "optional": ["SSH_PRIVATE_KEY", "SSH_PUBLIC_KEY"],
      "fields": {
        "SSH_PRIVATE_KEY": {
          "type": "string",
          "sensitive": true,
          "format": "base64",
          "example": "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K..."
        },
        "SSH_PUBLIC_KEY": {
          "type": "string",
          "pattern": "^(ssh-rsa|ssh-ed25519|ecdsa-sha2-nistp256|ecdsa-sha2-nistp384|ecdsa-sha2-nistp521) [A-Za-z0-9+/=]+ .+$",
          "example": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC... user@example.com"
        }
      }
    },
    "COMPANY": {
      "descriptionKey": "fields.COMPANY.description",
      "required": ["UNIVERSAL_USER_ID", "UNIVERSAL_USER_NAME"],
      "optional": ["DOCKER_JSON_CONF", "SSH_PRIVATE_KEY", "SSH_PUBLIC_KEY", "LOG_FILE", "PLUGINS"],
      "fields": {
        "UNIVERSAL_USER_ID": {
          "type": "string",
          "pattern": "^[0-9]+$",
          "example": "7322"
        },
        "UNIVERSAL_USER_NAME": {
          "type": "string",
          "pattern": "^[a-z_][a-z0-9_-]*$",
          "example": "rediacc"
        },
        "DOCKER_JSON_CONF": {
          "type": "object",
          "properties": {
            "insecure-registries": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": ["http://192.168.111.1:5000"]
            },
            "registry-mirrors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": ["http://192.168.111.1:5000"]
            },
            "runtimes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "SSH_PRIVATE_KEY": {
          "type": "string",
          "sensitive": true,
          "format": "base64",
          "example": "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K..."
        },
        "SSH_PUBLIC_KEY": {
          "type": "string",
          "pattern": "^(ssh-rsa|ssh-ed25519|ecdsa-sha2-nistp256|ecdsa-sha2-nistp384|ecdsa-sha2-nistp521) [A-Za-z0-9+/=]+ .+$",
          "example": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC... rediacc1"
        },
        "PLUGINS": {
          "type": "object",
          "description": "Plugin configurations with container images",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "image": {
                "type": "string",
                "pattern": "^[a-z0-9.-]+(:[0-9]+)?/[a-z0-9._-]+(/[a-z0-9._-]+)*:[a-z0-9._-]+$",
                "description": "Container image path with tag",
                "example": "192.168.111.1:5000/rediacc/plugin-terminal:latest"
              },
              "active": {
                "type": "boolean",
                "description": "Whether the plugin is active",
                "default": true
              }
            },
            "required": ["image", "active"]
          },
          "example": {
            "Terminal": {
              "image": "192.168.111.1:5000/rediacc/plugin-terminal:latest",
              "active": true
            },
            "Browser": {
              "image": "192.168.111.1:5000/rediacc/plugin-browser:latest",
              "active": true
            }
          }
        }
      }
    }
  },
  "commonTypes": {
    "ipAddress": {
      "type": "string",
      "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
    },
    "port": {
      "type": "number",
      "minimum": 1,
      "maximum": 65535
    },
    "size": {
      "type": "string",
      "pattern": "^[0-9]+[KMGT]$"
    },
    "cronExpression": {
      "type": "string"
    }
  }
}