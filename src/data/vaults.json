{
  "entities": {
    "MACHINE": {
      "descriptionKey": "fields.MACHINE.description",
      "required": ["ip", "user", "datastore", "ssh_key_configured"],
      "optional": ["port", "host_entry", "ssh_password"],
      "fields": {
        "ip": {
          "type": "string",
          "format": "ipv4",
          "example": "IP address of the machine. Example: 192.168.1.100"
        },
        "user": {
          "type": "string",
          "example": "Username for SSH access. Example: ubuntu"
        },
        "datastore": {
          "type": "string",
          "example": "Storage path. If BTRFS: uses existing. Otherwise: creates BTRFS pool at {path}.pool",
          "description": "Path for data storage. If this path exists on a BTRFS filesystem, it will be used as-is. Otherwise, a BTRFS storage pool will be created (file: {path}.pool) and mounted at this location for advanced features like snapshots and compression.",
          "default": "/mnt/datastore"
        },
        "port": {
          "type": "number",
          "example": "SSH port number. Example: 22"
        },
        "host_entry": {
          "type": "string",
          "example": "SSH known host entry. Example: 192.168.1.100 ssh-rsa AAAAB3NzaC1yc2E..."
        },
        "ssh_key_configured": {
          "type": "boolean",
          "example": "Whether SSH key is set up. Example: false"
        },
        "ssh_password": {
          "type": "string",
          "sensitive": true,
          "example": "SSH password (sensitive). Example: MyPassword123"
        }
      }
    },
    "REPOSITORY": {
      "descriptionKey": "fields.REPOSITORY.description",
      "required": ["credential"],
      "optional": [],
      "fields": {
        "credential": {
          "type": "string",
          "pattern": "^[A-Za-z0-9!@#$%^&*()_+{}|:<>,.?/]{32}$",
          "minLength": 16,
          "maxLength": 256,
          "example": "Repository access token (32 chars). Example: ABC123DEF456GHI789JKL012MNO345PQ"
        }
      }
    },
    "BRIDGE": {
      "descriptionKey": "fields.BRIDGE.description",
      "required": [],
      "optional": [],
      "fields": { }
    },
    "STORAGE": {
      "descriptionKey": "fields.STORAGE.entityDescription",
      "required": ["provider"],
      "optional": ["description", "noVersioning", "parameters"],
      "dynamicFields": true,
      "providerSchema": "storageProviders.json",
      "fields": {
        "provider": {
          "type": "string",
          "enum": [
            "s3",
            "azureblob",
            "azurefiles",
            "b2",
            "box",
            "cloudinary",
            "drive",
            "dropbox",
            "fichier",
            "filefabric",
            "filescom",
            "ftp",
            "gcs",
            "gofile",
            "googlephotos",
            "hdfs",
            "hidrive",
            "http",
            "iclouddrive",
            "imagekit",
            "internetarchive",
            "jottacloud",
            "koofr",
            "linkbox",
            "local",
            "mailru",
            "mega",
            "netstorage",
            "onedrive",
            "opendrive",
            "oracleobjectstorage",
            "pcloud",
            "pikpak",
            "premiumizeme",
            "protondrive",
            "putio",
            "qingstor",
            "quatrix",
            "seafile",
            "sftp",
            "sharefile",
            "sia",
            "smb",
            "storj",
            "sugarsync",
            "swift",
            "ulozto",
            "uptobox",
            "webdav",
            "yandex",
            "zoho"
          ],
          "example": "Storage provider name. Example: s3",
          "description": "Storage provider type"
        },
        "description": {
          "type": "string",
          "example": "Storage description. Example: My backup storage",
          "description": "Optional description of this storage configuration"
        },
        "noVersioning": {
          "type": "boolean",
          "description": "Disable versioning for this storage"
        },
        "parameters": {
          "type": "string",
          "example": "Extra rclone flags. Example: --transfers 4",
          "description": "Additional rclone parameters"
        }
      }
    },
    "SCHEDULE": {
      "descriptionKey": "fields.SCHEDULE.description",
      "required": ["cron", "task"],
      "optional": ["timezone", "notifications", "retry"],
      "fields": {
        "cron": {
          "type": "string",
          "example": "Schedule in cron format. Example: 0 2 * * * (daily at 2 AM)"
        },
        "task": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["backup", "restore", "sync", "cleanup"]
            },
            "target": {
              "type": "string"
            },
            "options": {
              "type": "object"
            }
          }
        },
        "timezone": {
          "type": "string",
          "example": "Time zone name. Example: America/New_York"
        },
        "notifications": {
          "type": "object",
          "properties": {
            "onSuccess": {
              "type": "boolean"
            },
            "onFailure": {
              "type": "boolean"
            },
            "channels": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["email", "webhook", "slack"]
              }
            }
          }
        },
        "retry": {
          "type": "object",
          "properties": {
            "attempts": {
              "type": "number"
            },
            "interval": {
              "type": "number"
            }
          }
        }
      }
    },
    "DISTRIBUTEDSTORAGE": {
      "descriptionKey": "fields.DISTRIBUTEDSTORAGE.description",
      "required": ["ceph_dashboard_credentials"],
      "optional": ["ceph_config", "monitoring"],
      "fields": {
        "ceph_dashboard_credentials": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "format": "uri",
              "example": "Dashboard URL. Example: https://192.168.1.100:8443"
            },
            "username": {
              "type": "string",
              "example": "Dashboard username. Example: admin"
            },
            "password": {
              "type": "string",
              "sensitive": true,
              "example": "Dashboard password (sensitive)"
            }
          },
          "description": "Ceph dashboard access credentials"
        },
        "ceph_config": {
          "type": "object",
          "properties": {
            "monitors": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "ipv4"
              },
              "example": "Monitor IPs. Example: [\"192.168.1.100\", \"192.168.1.101\", \"192.168.1.102\"]"
            },
            "auth_config": {
              "type": "string",
              "example": "Additional Ceph authentication config"
            },
            "custom_settings": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": "Custom Ceph settings. Example: {\"osd_pool_default_size\": \"3\"}"
            }
          },
          "description": "Advanced Ceph configuration options"
        },
        "monitoring": {
          "type": "object",
          "properties": {
            "prometheus_endpoint": {
              "type": "string",
              "format": "uri",
              "example": "Prometheus endpoint. Example: http://192.168.1.100:9283/metrics"
            },
            "alert_rules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "expression": {
                    "type": "string"
                  },
                  "severity": {
                    "type": "string",
                    "enum": ["critical", "warning", "info"]
                  }
                }
              }
            }
          },
          "description": "Monitoring and alerting configuration"
        }
      }
    },
    "REGION": {
      "descriptionKey": "fields.REGION.description",
      "required": [],
      "optional": ["code", "location"],
      "fields": {
        "code": {
          "type": "string",
          "pattern": "^[a-z]{2}-[a-z]+-[0-9]$",
          "example": "Region code. Example: us-east-1"
        },
        "location": {
          "type": "object",
          "properties": {
            "country": {
              "type": "string",
              "example": "Country code. Example: US"
            },
            "city": {
              "type": "string",
              "example": "City name. Example: New York"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            }
          }
        }
      }
    },
    "TEAM": {
      "descriptionKey": "fields.TEAM.description",
      "required": ["SSH_PRIVATE_KEY", "SSH_PUBLIC_KEY"],
      "optional": [],
      "fields": {
        "SSH_PRIVATE_KEY": {
          "type": "string",
          "sensitive": true,
          "format": "base64",
          "example": "Base64 encoded private key. Example: LS0tLS1CRUdJTi0tLS0t"
        },
        "SSH_PUBLIC_KEY": {
          "type": "string",
          "pattern": "^(ssh-rsa|ssh-ed25519|ecdsa-sha2-nistp256|ecdsa-sha2-nistp384|ecdsa-sha2-nistp521) [A-Za-z0-9+/=]+ .+$",
          "example": "Public SSH key. Example: ssh-rsa AAAAB3NzaC1yc2E... mykey"
        }
      }
    },
    "USER": {
      "descriptionKey": "fields.USER.description",
      "required": [],
      "optional": ["SSH_PRIVATE_KEY", "SSH_PUBLIC_KEY"],
      "fields": {
        "SSH_PRIVATE_KEY": {
          "type": "string",
          "sensitive": true,
          "format": "base64",
          "example": "Base64 encoded private key. Example: LS0tLS1CRUdJTi0tLS0t"
        },
        "SSH_PUBLIC_KEY": {
          "type": "string",
          "pattern": "^(ssh-rsa|ssh-ed25519|ecdsa-sha2-nistp256|ecdsa-sha2-nistp384|ecdsa-sha2-nistp521) [A-Za-z0-9+/=]+ .+$",
          "example": "Public SSH key. Example: ssh-rsa AAAAB3NzaC1yc2E... user@email.com"
        }
      }
    },
    "COMPANY": {
      "descriptionKey": "fields.COMPANY.description",
      "required": ["UNIVERSAL_USER_ID", "UNIVERSAL_USER_NAME", "DOCKER_JSON_CONF"],
      "optional": ["SSH_PRIVATE_KEY", "SSH_PUBLIC_KEY", "LOG_FILE", "PLUGINS"],
      "fields": {
        "UNIVERSAL_USER_ID": {
          "type": "string",
          "pattern": "^[0-9]+$",
          "example": "Numeric user ID. Example: 1000"
        },
        "UNIVERSAL_USER_NAME": {
          "type": "string",
          "pattern": "^[a-z_][a-z0-9_-]*$",
          "example": "Unix username. Example: myuser"
        },
        "DOCKER_JSON_CONF": {
          "type": "object",
          "properties": {
            "insecure-registries": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": ["Registry URLs. Example: http://192.168.1.10:5000"]
            },
            "registry-mirrors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": ["Registry URLs. Example: http://192.168.1.10:5000"]
            },
            "runtimes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "SSH_PRIVATE_KEY": {
          "type": "string",
          "sensitive": true,
          "format": "base64",
          "example": "Base64 encoded private key. Example: LS0tLS1CRUdJTi0tLS0t"
        },
        "SSH_PUBLIC_KEY": {
          "type": "string",
          "pattern": "^(ssh-rsa|ssh-ed25519|ecdsa-sha2-nistp256|ecdsa-sha2-nistp384|ecdsa-sha2-nistp521) [A-Za-z0-9+/=]+ .+$",
          "example": "Company SSH key. Example: ssh-rsa AAAAB3NzaC1yc2E... company-key"
        },
        "PLUGINS": {
          "type": "object",
          "description": "Plugin configurations with container images",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "image": {
                "type": "string",
                "pattern": "^[a-z0-9.-]+(:[0-9]+)?/[a-z0-9._-]+(/[a-z0-9._-]+)*:[a-z0-9._-]+$",
                "description": "Container image path with tag",
                "example": "Docker image path. Example: myregistry.com:5000/myplugin:v1.0"
              },
              "active": {
                "type": "boolean",
                "description": "Whether the plugin is active",
                "default": true
              }
            },
            "required": ["image", "active"]
          },
          "example": {
            "MyPlugin": {
              "image": "Plugin docker image. Example: registry.com:5000/myplugin:v1.0",
              "active": true
            },
            "AnotherPlugin": {
              "image": "Another plugin image. Example: registry.com:5000/plugin2:v2.0",
              "active": false
            }
          }
        }
      }
    }
  },
  "commonTypes": {
    "ipAddress": {
      "type": "string",
      "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
    },
    "port": {
      "type": "number",
      "minimum": 1,
      "maximum": 65535
    },
    "size": {
      "type": "string",
      "pattern": "^[0-9]+[KMGT]$"
    },
    "cronExpression": {
      "type": "string"
    }
  }
}