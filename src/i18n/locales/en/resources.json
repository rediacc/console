{
  "audit": {
    "action": "Action",
    "by": "by",
    "details": "Details",
    "error": "Error Loading Audit History",
    "errorLoading": "Failed to load audit history",
    "export": "Export",
    "exportCSV": "Export as CSV",
    "exportJSON": "Export as JSON",
    "exportSuccess": "Audit history exported as {{format}}",
    "lastActivity": "Last Activity",
    "noRecords": "No audit records found",
    "performedBy": "Performed By",
    "system": "System",
    "timestamp": "Timestamp",
    "title": "Audit History - {{name}}",
    "totalRecords": "Total Records",
    "trace": "Trace",
    "viewHistory": "View History",
    "visibleRecords": "Visible Records"
  },
  "bridges": {
    "bridge": "Bridge",
    "bridgeName": "Bridge Name",
    "confirmDelete": "Are you sure you want to delete bridge \"{{bridgeName}}\"? This will affect all machines using this bridge.",
    "createBridge": "Create Bridge",
    "deleteBridge": "Delete Bridge",
    "editBridge": "Edit Bridge",
    "noBridges": "No bridges found in this region",
    "placeholders": {
      "enterBridgeName": "Enter bridge name",
      "selectBridge": "Select bridge",
      "selectRegionFirst": "Select a region first"
    },
    "title": "Bridges",
    "totalBridges": "Total {{total}} bridges"
  },
  "containers": {
    "blockIO": "Block I/O",
    "command": "Command",
    "configuration": "Configuration",
    "containerDetails": "Container Details",
    "containerID": "Container ID",
    "containerStatusPaused": "Paused",
    "containerStatusRestarting": "Restarting",
    "containerStatusRunning": "Running",
    "containerStatusStopped": "Stopped",
    "cpuUsage": "CPU Usage",
    "created": "Created",
    "environment": "Environment",
    "image": "Image",
    "labels": "Labels",
    "memoryUsage": "Memory Usage",
    "mounts": "Mounts",
    "networkIO": "Network I/O",
    "networks": "Networks",
    "pids": "PIDs",
    "pluginDetails": "Plugin Details",
    "ports": "Ports",
    "processes": "Processes",
    "resourceUsage": "Resource Usage",
    "size": "Size",
    "status": "Status"
  },
  "errors": {
    "failedToGetRepositoryGuid": "Failed to get repository GUID",
    "machineNotFound": "Selected machine not found"
  },
  "general": {
    "actions": "Actions",
    "cancel": "Cancel",
    "configureVault": "Configure Vault - {{name}}",
    "create": "Create",
    "delete": "Delete",
    "edit": "Edit",
    "no": "No",
    "region": "Region",
    "save": "Save",
    "team": "Team",
    "vault": "Vault",
    "vaultVersion": "Vault Version",
    "yes": "Yes"
  },
  "local": "Local",
  "localActions": {
    "containerExec": "Container Exec",
    "containerLocal": "Container Local",
    "containerStats": "Container Stats",
    "downloadCli": "Download Rediacc CLI from",
    "howToInstall": "How to Install",
    "installationSteps": "Installation Steps",
    "linuxInstructions": "Linux: Run ./rediacc protocol register",
    "local": "Local",
    "macosInstructions": "macOS: Run ./rediacc protocol register",
    "noPluginsRunning": "No plugins running",
    "openContainerTerminal": "terminal",
    "openInDesktop": "desktop-app",
    "openInVSCode": "vscode",
    "openTerminal": "terminal",
    "protocolNotInstalled": "Desktop App Protocol Not Installed",
    "protocolRegistrationRequired": "Protocol registration required for browser integration",
    "protocolRequired": "Rediacc Desktop App Required",
    "protocolRequiredDesc": "The Rediacc CLI application needs to be installed and the protocol handler registered to use this feature.",
    "showCLICommands": "cli commands",
    "troubleshooting": "Troubleshooting",
    "troubleshootingAdmin": "On Windows, run as Administrator",
    "troubleshootingBrowser": "Restart your browser after registration",
    "troubleshootingRestart": "On Linux, log out and back in",
    "viewContainerLogs": "logs",
    "windowsInstructions": "Windows: Run rediacc protocol register (or rediacc protocol register --system-wide as Administrator)"
  },
  "localCommandBuilder": {
    "action": "Action",
    "apiUrl": "API URL",
    "command": "Command (Optional)",
    "commandHelp": "Leave empty for interactive terminal. Example: docker ps",
    "confirm": "Confirm",
    "confirmHelp": "Preview changes and ask for confirmation",
    "connectPlugin": "Connect to Plugin",
    "copyCommand": "Copy Command",
    "description": "Build CLI commands for machine {{machine}} and repository {{repository}}",
    "desktopDescription": "Open repository in desktop file manager or terminal",
    "desktopHelp": "Click to open the repository in your default desktop application",
    "desktopTab": "Desktop",
    "vscodeDescription": "Launch VS Code with SSH remote connection to the repository",
    "vscodeHelp": "Opens VS Code with remote SSH extension configured for this repository",
    "vscodeTab": "VS Code",
    "devMode": "Dev Mode",
    "devModeHelp": "Relaxes SSH host key checking",
    "download": "Download (Remote → Local)",
    "enterPluginName": "Please enter a plugin name",
    "executePlugin": "Execute Plugin Command",
    "generatedCommand": "Generated Command",
    "listPlugins": "List Available Plugins",
    "localPath": "Local Path",
    "localPathHelp": "Path to the local folder for sync operations",
    "mirror": "Mirror",
    "mirrorHelp": "Delete files not present at source",
    "noPluginsRunning": "No running plugin containers found",
    "operatingSystem": "Operating System",
    "options": "Options",
    "pluginAction": "Action",
    "pluginFailed": "Plugin command failed",
    "pluginListConnections": "List active connections",
    "pluginName": "Plugin Name",
    "pluginNameHelp": "Name of the plugin to connect to",
    "pluginNamePlaceholder": "e.g., webui, api, admin",
    "pluginPort": "Local Port (Optional)",
    "pluginPortHelp": "Leave empty for auto-assignment (7111-9111)",
    "pluginPortPlaceholder": "e.g., 8080",
    "pluginSuccess": "Plugin command executed successfully",
    "pluginTab": "Plugins (rediacc-plugin)",
    "syncTab": "Sync (rediacc-sync)",
    "terminalTab": "Terminal (rediacc-term)",
    "title": "Local Command Builder",
    "unixLinuxMac": "Unix/Linux/Mac",
    "upload": "Upload (Local → Remote)",
    "useDocker": "Run with Docker",
    "useDockerHelp": "Run the command using the rediacc/cli Docker image",
    "useLoginAuth": "Use login authentication instead of token",
    "useLoginAuthHelp": "Login with {{email}} (you'll be prompted for password)",
    "verify": "Verify",
    "verifyHelp": "Use checksums to verify all transfers",
    "windows": "Windows"
  },
  "machines": {
    "createMachine": "Add Machine",
    "machineName": "Machine Name",
    "placeholders": {
      "enterMachineName": "Enter machine name"
    }
  },
  "messages": {
    "highestPriorityQueued": "Highest priority {{resourceType}} function queued for submission",
    "repositoryCreationQueued": "Repository creation queued for submission"
  },
  "pipInstall": {
    "advancedOptions": "Advanced Options",
    "checkDocs": "Check our documentation",
    "checkProtocolStatus": "Check Protocol Status",
    "commonIssues": "Common Installation Issues",
    "copyAllCommands": "Copy All Commands",
    "error": "Error",
    "installCommandDesc": "Install Rediacc CLI from PyPI",
    "installRediaccCli": "Install Rediacc CLI",
    "installationGuide": "Installation Guide",
    "permissionDenied": "Permission denied",
    "permissionDeniedTitle": "Permission Denied",
    "pipNotFound": "pip: command not found",
    "platformSpecific": "Platform-specific notes for {{platform}}",
    "protocolCheckAgain": "Check Again",
    "protocolManualSteps": "Follow manual registration steps",
    "protocolNotRegisteredTitle": "Protocol Not Registered",
    "protocolRegisterNow": "Register Protocol Now",
    "protocolStatusAvailable": "Protocol is registered and available",
    "protocolStatusChecking": "Checking protocol registration...",
    "protocolStatusConfidenceHigh": "Detection confidence: High",
    "protocolStatusConfidenceLow": "Detection confidence: Low",
    "protocolStatusConfidenceMedium": "Detection confidence: Medium",
    "protocolStatusMethodIframe": "Detected via iframe method",
    "protocolStatusMethodNavigation": "Detected via navigation method",
    "protocolStatusNotAvailable": "Protocol is not registered",
    "protocolStatusUnknown": "Unable to determine protocol status",
    "pythonVersion": "Python version too old",
    "quickInstall": "Quick Install",
    "quickInstallDesc": "Install Rediacc CLI quickly with pip package manager",
    "quickInstallTitle": "Quick Installation",
    "recommended": "Recommended",
    "registerCommandDesc": "Register rediacc:// protocol handler",
    "reportIssue": "Report an issue",
    "setupCommandDesc": "Checks dependencies and registers protocol handler",
    "specificVersion": "Specific Version",
    "step1Install": "Step 1: Install Package",
    "step2Register": "Step 2: Register Protocol",
    "step2Setup": "Step 2: Run Setup",
    "step3Verify": "Step 3: Verify Installation",
    "stillNeedHelp": "Still need help?",
    "troubleshooting": "Troubleshooting",
    "uninstall": "Uninstall",
    "upgradeDesc": "Upgrade to the latest version",
    "userInstallOnly": "Install for current user only",
    "versionDesc": "Install a specific version or upgrade existing installation",
    "virtualEnvironment": "Virtual Environment",
    "warning": "Warning"
  },
  "regions": {
    "bridges": "Bridges",
    "bridgesInRegion": "Bridges in {{region}}",
    "confirmDelete": "Are you sure you want to delete region \"{{regionName}}\"? This will remove all bridges in the region.",
    "createRegion": "Create Region",
    "deleteRegion": "Delete Region",
    "editRegion": "Edit Region",
    "placeholders": {
      "enterRegionName": "Enter region name",
      "selectRegion": "Select region"
    },
    "regionName": "Region Name",
    "searchRegions": "Search regions...",
    "selectRegionPrompt": "Select a region to view its bridges",
    "selectRegionToView": "Select a region above to view and manage its bridges",
    "title": "Regions"
  },
  "remoteFiles": {
    "info": "Select a file to pull to this machine. Only one file can be selected at a time. Directories cannot be selected.",
    "loadError": "Failed to load files",
    "loadFiles": "Load Files",
    "modified": "Modified",
    "name": "Name",
    "noFiles": "No files found in this location",
    "noSources": "No sources available",
    "pull": "Pull Selected File",
    "pullStarted": "Started pulling file",
    "selectFile": "Please select a file to pull",
    "selectSource": "Select source location",
    "size": "Size",
    "sourceLabel": "Source Location:",
    "title": "Browse Remote Files"
  },
  "repositories": {
    "accessible": "Accessible",
    "activeState": "State",
    "activity": "Activity",
    "addCredential": "Add Credential",
    "advanced": "advanced",
    "alreadyOriginalRepository": "This is already an original repository",
    "available": "Available",
    "blockDevices": "Storage Devices",
    "cannotDeleteGrandRepository": "Cannot delete original repository using this action. Use 'Delete Repository' instead.",
    "cannotDeleteHasClones": "Cannot Delete Repository",
    "checkQueueManager": "Check the Queue Manager for status",
    "cleanedUpFailedPush": "Cleaned up repository after failed push",
    "cloneStarted": "Clone operation started: {{dest}}",
    "clonesList": "Active clones:",
    "confirmDelete": "Are you sure you want to delete repository \"{{repositoryName}}\"?",
    "containerCPU": "CPU",
    "containerImage": "Image",
    "containerMemory": "Memory",
    "containerName": "Container Name",
    "containerPorts": "Ports",
    "containerStatus": "Status",
    "containers": "containers",
    "containersAndPlugins": "Containers and Plugins",
    "containersList": "Containers",
    "cpu": "CPU",
    "createRepository": "Create Repo (Credentials)",
    "createSuccess": "Repository created successfully",
    "credentialExists": "Credential exists",
    "datastore": "Datastore",
    "datastoreUsage": "Datastore Usage",
    "defaultGateway": "Default Gateway",
    "defaultInterface": "Default Interface",
    "deleteClone": "delete clone",
    "deleteCloneConfirmMessage": "This will permanently delete the cloned repository '{{name}}'. The original repository will not be affected. This action cannot be undone.",
    "deleteCloneConfirmTitle": "Delete Cloned Repository?",
    "deleteCloneCredentialFailed": "Physical file deletion queued, but credential removal failed",
    "deleteCloneFailed": "Failed to delete clone",
    "deleteCloneQueued": "Clone deletion queued: {{name}}",
    "deleteCloneSuccess": "Clone deleted successfully",
    "deleteError": "Failed to delete repository",
    "deleteGrand": "delete repository",
    "deleteGrandConfirmPrompt": "Type the repository name '{{name}}' to confirm deletion:",
    "deleteGrandConfirmTitle": "Delete Original Repository?",
    "deleteGrandConfirmationMismatch": "Repository name does not match. Deletion cancelled.",
    "deleteGrandCredentialFailed": "Physical file deletion queued, but credential removal failed",
    "deleteGrandFailed": "Failed to delete repository",
    "deleteGrandQueued": "Repository deletion queued: {{name}}",
    "deleteGrandSuccess": "Repository deleted successfully",
    "deleteGrandWarning": "⚠️ Warning: This will permanently delete the original repository",
    "deleteGrandWarningDesc": "You are about to delete the repository '{{name}}'. This action is irreversible and will permanently remove all data. If there are any clones on other machines, they may become orphaned.",
    "deleteOptionsMessage": "To delete this repository, you must either delete all clones first or promote one of them to become the new original repository.",
    "deleteRepository": "Delete Repository",
    "deleteSuccess": "Repository deleted successfully",
    "deviceName": "Device",
    "diskSpace": "Disk Space",
    "diskUsage": "Disk Usage",
    "editRepository": "Edit Repository",
    "emptyNameError": "Repository name cannot be empty",
    "errorLoadingContainers": "Failed to load containers",
    "errorLoadingServices": "Failed to load services",
    "exists": "Exists",
    "failedToCloneRepository": "Failed to clone repository",
    "failedToCreateQueueItem": "Failed to create queue item",
    "failedToCreateRepository": "Failed to create destination repository",
    "failedToSubmit": "Failed to submit repository list request",
    "fetchingRepositories": "Fetching repositories...",
    "filePaths": "File Paths",
    "functionsFor": "Functions for {{name}}",
    "guid": "Repository GUID",
    "guidHelperText": "Optional: Specify a custom GUID for the repository. Leave empty to auto-generate.",
    "hasActiveClonesMessage": "This repository '{{name}}' has {{count}} active clone(s) that depend on it.",
    "hasRediaccfile": "Rediaccfile",
    "hideDetails": "Hide Details",
    "highestPriorityQueued": "Highest priority repository function queued for submission",
    "hostname": "Hostname",
    "imagePath": "Image Path",
    "imageSize": "Image Size",
    "interfaceName": "Interface",
    "ipAddresses": "IP Addresses",
    "keepOpenAfterCreation": "Keep repository open after creation",
    "kernel": "Kernel",
    "lastModified": "Last Modified",
    "loadingContainers": "Loading containers...",
    "loadingServices": "Loading services...",
    "macAddress": "MAC Address",
    "machineSystemInfo": "Machine System Information",
    "memory": "Memory",
    "model": "Model",
    "mount": "mount",
    "mountPath": "Mount Path",
    "mounted": "Mounted",
    "nameAlreadyExists": "A repository with name '{{name}}' already exists",
    "nameUnchanged": "Repository name unchanged",
    "networkInfo": "Network Information",
    "newRepositoryName": "New repository name",
    "noContainers": "No containers found",
    "noCredentialsFound": "No credentials found for repository '{{name}}'",
    "noRepositories": "No repositories found in this team",
    "noRepositoriesFound": "No repositories found",
    "noRepositoryData": "No repository data available",
    "noServices": "No services found",
    "notAGrandRepository": "This is not an original repository. Use 'Delete Clone' instead.",
    "notFound": "Not Found",
    "notMounted": "Not Mounted",
    "osName": "Operating System",
    "partitions": "Partitions",
    "pid": "PID",
    "placeholders": {
      "enterGuid": "Optional: Enter a specific GUID (e.g., 550e8400-e29b-41d4-a716-446655440000)",
      "enterRepositoryName": "Enter repository name",
      "enterSize": "Enter size (e.g., 10G)"
    },
    "plugin": "plugin",
    "plugins": "plugins",
    "pluginsList": "Active Plugins",
    "promoteButton": "Promote",
    "promoteFailed": "Failed to promote repository",
    "promoteSuccess": "Repository '{{name}}' promoted to original successfully",
    "promoteToGrand": "promote",
    "promoteToGrandMessage": "This will promote '{{name}}' to become the new original repository, replacing '{{grand}}'.",
    "promoteToGrandTitle": "Promote Clone to Original Repository?",
    "promoteWarning": "This operation will update the repository lineage. All sibling clones will point to this repository as their parent.",
    "promoteWillUpdateSiblings": "The following {{count}} sibling clone(s) will be updated to reference this repository as their new original:",
    "queueItemCreated": "Repository creation queued successfully",
    "queuePosition": "Queue position",
    "rediaccfile": "Rediaccfile",
    "refreshNotAvailable": "Refresh not available - data is cached from machine status",
    "rename": "rename",
    "renameFailed": "Failed to rename repository",
    "renameMessage": "Enter a new name for repository '{{name}}':",
    "renameSuccess": "Repository renamed from '{{oldName}}' to '{{newName}}' successfully",
    "renameTitle": "Rename Repository",
    "repoCreatedButQueueFailed": "Repository credentials created, but failed to queue physical creation",
    "repositories": "Repositories",
    "repository": "Repository",
    "repositoryFunctions": "Repository Functions",
    "repositoryGuid": "Repository GUID",
    "repositoryInfo": "Repository Information",
    "repositoryName": "Repository Name",
    "repositoryNotFound": "Repository not found",
    "requestQueued": "Repository list request queued. Please check the Queue Manager for status.",
    "resourceUsage": "Resource Usage",
    "restarts": "Restarts",
    "rootDisk": "Root Disk",
    "selectRepository": "Select repository",
    "serviceName": "Service Name",
    "services": "services",
    "servicesAndContainers": "Services & Containers",
    "servicesList": "Services",
    "servicesSection": "Services",
    "showDetails": "Show Details",
    "size": "Size",
    "sizeHelperText": "e.g., 10G, 100G, 1T",
    "state": "State",
    "status": "Status",
    "statusMountedNotRunning": "Mounted (not running)",
    "statusMountedRunning": "Mounted & Running",
    "statusUnmounted": "Unmounted",
    "storageInfo": "Storage Information",
    "systemContainers": "System Containers",
    "systemInfo": "System Information",
    "systemTime": "System Time",
    "taskCancelled": "Repository list task was cancelled",
    "taskSubmitted": "Repository list task submitted, monitoring progress...",
    "timezone": "Timezone",
    "type": "Type",
    "unmount": "unmount",
    "uptime": "Uptime",
    "used": "Used",
    "vaultVersion": "Vault Version",
    "waitingInQueue": "Waiting in queue..."
  },
  "resourceTabs": {
    "machines": "Machines",
    "machinesDescription": "Manage and monitor your machines",
    "repositories": "Repo (Credentials)",
    "repositoriesDescription": "Manage repository credentials and configurations",
    "schedules": "Schedules",
    "schedulesDescription": "Manage automated task schedules",
    "storage": "Storage",
    "storageDescription": "Configure cloud storage connections"
  },
  "storage": {
    "confirmDelete": "Are you sure you want to delete storage \"{{storageName}}\"?",
    "createStorage": "Add Storage",
    "deleteError": "Failed to delete storage",
    "deleteStorage": "Delete Storage",
    "deleteSuccess": "Storage deleted successfully",
    "editStorage": "Edit Storage",
    "import": {
      "alreadyExists": "A storage with this name already exists in the team",
      "button": "Import from Rclone",
      "complete": "Import Complete",
      "completeDescription": "The import process has been completed. See the results below:",
      "dragDropText": "Click to upload or drag and drop your rclone config file",
      "error": "Error",
      "exists": "Exists",
      "importError": "Failed to import",
      "importSelected": "Import Selected",
      "imported": "Successfully imported",
      "importing": "Importing Storage Configurations...",
      "instructions": "Import Storage Configuration",
      "instructionsDetail": "To import your existing rclone configurations, first run the following command on your machine to find your rclone config file:",
      "noConfigsFound": "No storage configurations found in the uploaded file",
      "parseError": "Failed to parse the rclone config file",
      "pending": "Pending",
      "selectDescription": "Select which storage configurations you want to import. Existing storages with the same name will be marked.",
      "selectStorages": "Select Storage Configurations",
      "skipped": "Skipped",
      "status": "Status",
      "step1": "Upload Config",
      "step2": "Select Storage",
      "step3": "Import Results",
      "success": "Success",
      "successMessage": "Storage configurations imported successfully",
      "supportedFormats": "Supports .conf files from rclone",
      "title": "Import Storage from Rclone Config",
      "unsupportedProvider": "Unsupported provider type: {{type}}",
      "uploadPrompt": "Then upload the rclone.conf file below to import your storage configurations."
    },
    "noStorage": "No storage found in this team",
    "noStorageFound": "No storage found",
    "placeholders": {
      "enterStorageName": "Enter storage name"
    },
    "provider": "Provider",
    "queueItemCreated": "Queue item created successfully",
    "selectStorage": "Select storage",
    "storage": "Storage",
    "storageFunctions": "Storage Functions",
    "storageName": "Storage Name"
  },
  "teams": {
    "confirmDelete": "Are you sure you want to delete team \"{{teamName}}\"? This will remove all resources in the team.",
    "createTeam": "Add Team",
    "deleteTeam": "Delete Team",
    "editTeam": "Edit Team",
    "machines": "Machines",
    "placeholders": {
      "enterTeamName": "Enter team name",
      "searchTeams": "Search teams by name...",
      "selectTeam": "Select team"
    },
    "resourcesInTeam": "Resources in {{team}}",
    "resourcesInTeams": "Resources in {{count}} Teams",
    "searchTeams": "Search teams...",
    "selectTeamPrompt": "Select a team to view its resources",
    "selectTeamToView": "Select a team above to view and manage its resources",
    "teamName": "Team Name",
    "teamResources": "Team Resources",
    "title": "Teams",
    "validation": {
      "teamNamePattern": "Team name can only contain letters, numbers, hyphens, and underscores",
      "teamNameRequired": "Please enter team name"
    }
  },
  "templates": {
    "clearSelection": "Clear Selection",
    "default": "Default",
    "failedToLoadTemplate": "Failed to load template data",
    "files": "Files",
    "filesCount": "files",
    "loading": "Loading templates...",
    "loadingDetails": "Loading template details...",
    "noReadme": "No README file found",
    "noTemplate": "No Template",
    "overview": "Overview",
    "rootFiles": "Root Files",
    "selectOptional": "Select a template (optional) to pre-populate your repository with files",
    "selectTemplate": "Select Template",
    "startEmpty": "Start with an empty repository",
    "templateDetails": "Template Details",
    "useTemplate": "Use Template",
    "viewDetails": "View Details"
  }
}
