{
  "app": {
    "name": "Rediacc Console",
    "tagline": "Enterprise Backup & Recovery"
  },
  "navigation": {
    "dashboard": "Dashboard",
    "resources": "Resources",
    "users": "Users",
    "system": "System",
    "queue": "Queue",
    "settings": "Settings",
    "architecture": "Architecture",
    "logout": "Logout"
  },
  "actions": {
    "create": "Create",
    "edit": "Edit",
    "delete": "Delete",
    "save": "Save",
    "cancel": "Cancel",
    "submit": "Submit",
    "search": "Search",
    "filter": "Filter",
    "refresh": "Refresh",
    "export": "Export",
    "import": "Import",
    "view": "View",
    "close": "Close",
    "back": "Back",
    "next": "Next",
    "configure": "Configure",
    "activate": "Activate",
    "deactivate": "Deactivate",
    "assign": "Assign",
    "reset": "Reset",
    "retry": "Retry",
    "fullscreen": "Fullscreen",
    "exitFullscreen": "Exit Fullscreen"
  },
  "status": {
    "active": "Active",
    "inactive": "Inactive",
    "pending": "Pending",
    "running": "Running",
    "completed": "Completed",
    "failed": "Failed",
    "cancelled": "Cancelled",
    "online": "Online",
    "offline": "Offline",
    "healthy": "Healthy",
    "warning": "Warning",
    "error": "Error"
  },
  "messages": {
    "loading": "Loading...",
    "saving": "Saving...",
    "success": "Success",
    "error": "Error",
    "warning": "Warning",
    "info": "Information",
    "confirmDelete": "Are you sure you want to delete this item?",
    "deleteSuccess": "Item deleted successfully",
    "createSuccess": "Item created successfully",
    "updateSuccess": "Item updated successfully",
    "noData": "No data available",
    "required": "This field is required",
    "invalidEmail": "Invalid email address",
    "passwordMismatch": "Passwords do not match"
  },
  "table": {
    "id": "ID",
    "name": "Name",
    "description": "Description",
    "status": "Status",
    "createdAt": "Created At",
    "updatedAt": "Updated At",
    "actions": "Actions",
    "total": "Total",
    "page": "Page",
    "of": "of",
    "items": "items",
    "showing": "Showing",
    "to": "to",
    "showingRecords": "Showing records {{start}}-{{end}} of {{total}}"
  },
  "language": {
    "select": "Select Language",
    "en": "English",
    "es": "Spanish"
  },
  "theme": {
    "light": "Light",
    "dark": "Dark"
  },
  "uiMode": {
    "simple": "Simple",
    "expert": "Expert",
    "switching": "Switching to {{mode}} mode..."
  },
  "general": {
    "versionFormat": "v{{version}}",
    "showingRecords": "Showing records {{start}}-{{end}} of {{total}}"
  },
  "dashboard": {
    "availablePlans": "Available Plans",
    "upgradeOptions": "Upgrade Options",
    "currentPlan": "Current Plan",
    "comparePlansDescription": "Compare features and pricing across different subscription tiers",
    "elitePlanDescription": "You're on our highest tier plan with all features unlocked"
  },
  "vaultEditor": {
    "vaultConfiguration": "Vault Configuration",
    "vaultVersion": "Vault Version:",
    "versionAutoIncrement": "Version will auto-increment on save",
    "importJson": "Import JSON",
    "exportJson": "Export JSON",
    "unsavedChanges": "Unsaved changes",
    "versionWillIncrement": "Version will increment to {{version}}",
    "saveVaultConfiguration": "Save Vault Configuration",
    "validationErrors": "Validation Errors:",
    "pleaseFixErrors": "Please fix validation errors before saving",
    "noChangesToSave": "No changes to save",
    "unknownEntityType": "Unknown Entity Type",
    "unknownEntityDescription": "Entity type \"{{type}}\" is not defined in the vault definitions.",
    "requiredFields": "Required Fields",
    "optionalFields": "Optional Fields",
    "extraFields": "Extra Fields (Not in Schema)",
    "extraFieldsTooltip": "These fields were imported but are not defined in the schema",
    "extraFieldsWarning": "Warning",
    "extraFieldsWarningDescription": "These fields are not defined in the schema and will be stored under 'extraFields' in the JSON structure.",
    "rawJsonEditor": "Raw JSON Editor (Expert Mode)",
    "rawJsonTooltip": "Direct JSON editing - Use with caution!",
    "expertModeOnly": "Expert Mode Only",
    "expertModeDescription": "Direct JSON editing can break system functionality if not done correctly. Only modify if you understand the vault schema and implications.",
    "jsonError": "JSON Error",
    "formatJson": "Format JSON",
    "resetToFormValues": "Reset to Form Values",
    "isRequired": "{{field}} is required",
    "invalidFormat": "Invalid format. {{description}}",
    "minLength": "Minimum length is {{length}}",
    "maxLength": "Maximum length is {{length}}",
    "minValue": "Minimum value is {{value}}",
    "maxValue": "Maximum value is {{value}}",
    "mustBeValidJson": "Must be valid JSON",
    "mustBeArray": "Must be an array",
    "mustBeValidJsonArray": "Must be valid JSON array",
    "enterJsonObject": "Enter JSON object",
    "enterJsonArray": "Enter JSON array",
    "portPlaceholder": "Port number (1-65535)",
    "example": "Example:",
    "advanced": "Advanced",
    "failedToSerialize": "Failed to serialize data to JSON",
    "invalidJsonFormat": "Invalid JSON format",
    "failedToParseJson": "Failed to parse JSON:",
    "fieldsMovedToExtra": "{{count}} field(s) moved to extraFields: {{fields}}",
    "fieldsMovedFromExtra": "{{count}} field(s) restored from extraFields: {{fields}}",
    "fields": {
      "MACHINE": {
        "description": "Machine configuration for SSH access and storage",
        "ip": {
          "label": "IP Address",
          "description": "IP address of the machine"
        },
        "user": {
          "label": "Username",
          "description": "SSH username for connection"
        },
        "datastore": {
          "label": "Datastore Path",
          "description": "Path to the datastore directory on the machine"
        },
        "port": {
          "label": "SSH Port",
          "description": "SSH port number"
        },
        "host_entry": {
          "label": "Host Entry",
          "description": "SSH known host entry for security verification"
        },
        "ssh_password": {
          "label": "SSH Password",
          "description": "SSH password for authentication (optional, SSH keys preferred)"
        }
      },
      "REPOSITORY": {
        "description": "Repository configuration for backup storage",
        "name": {
          "label": "Repository Name",
          "description": "Repository name identifier"
        },
        "size": {
          "label": "Initial Size",
          "description": "Initial repository size (K/M/G/T)"
        },
        "credential": {
          "label": "Access Password",
          "description": "Repository access password (32 characters, alphanumeric + special chars)"
        },
        "encryption": {
          "label": "Enable Encryption",
          "description": "Enable encryption for repository"
        },
        "retention": {
          "label": "Retention Policy",
          "description": "Retention policy settings"
        },
        "schedule": {
          "label": "Backup Schedule",
          "description": "Cron expression for automated backups"
        }
      },
      "STORAGE": {
        "description": "Storage configuration for backup destinations",
        "type": {
          "label": "Storage Type",
          "description": "Type of storage backend"
        },
        "path": {
          "label": "Storage Path",
          "description": "Path or bucket name for storage"
        },
        "credentials": {
          "label": "Access Credentials",
          "description": "Authentication credentials for storage access"
        }
      },
      "SCHEDULE": {
        "description": "Schedule configuration for automated tasks",
        "cron": {
          "label": "Cron Expression",
          "description": "Cron expression defining the schedule"
        },
        "timezone": {
          "label": "Timezone",
          "description": "Timezone for schedule execution"
        },
        "enabled": {
          "label": "Enable Schedule",
          "description": "Whether this schedule is active"
        }
      },
      "BRIDGE": {
        "description": "Bridge configuration for network connectivity",
        "host": {
          "label": "Bridge Host",
          "description": "Hostname or IP address of the bridge"
        },
        "port": {
          "label": "Bridge Port",
          "description": "Port number for bridge connection"
        },
        "protocol": {
          "label": "Protocol",
          "description": "Communication protocol (HTTP/HTTPS)"
        },
        "name": {
          "label": "Bridge Name",
          "description": "Name identifier for the bridge"
        },
        "type": {
          "label": "Bridge Type",
          "description": "Type of bridge deployment"
        },
        "endpoints": {
          "label": "Endpoints",
          "description": "Bridge endpoint configurations"
        },
        "security": {
          "label": "Security Settings",
          "description": "Security configuration for the bridge"
        },
        "loadBalancing": {
          "label": "Load Balancing",
          "description": "Load balancing configuration"
        },
        "ip": {
          "label": "IP Address",
          "description": "IP address of the bridge machine"
        },
        "user": {
          "label": "SSH User",
          "description": "SSH username for bridge access"
        },
        "datastore": {
          "label": "Datastore Path",
          "description": "Path to the datastore directory"
        },
        "host_entry": {
          "label": "Host Entry",
          "description": "SSH known host entry for security verification"
        },
        "ssh_password": {
          "label": "SSH Password",
          "description": "SSH password for authentication (optional, SSH keys preferred)"
        }
      },
      "REGION": {
        "description": "Region configuration for geographic distribution",
        "name": {
          "label": "Region Name",
          "description": "Name of the geographic region"
        },
        "code": {
          "label": "Region Code",
          "description": "Short code for the region"
        }
      },
      "TEAM": {
        "description": "Team configuration for organizational structure",
        "name": {
          "label": "Team Name",
          "description": "Name of the team"
        },
        "teamDescription": {
          "label": "Team Description",
          "description": "Description of team purpose and responsibilities"
        }
      },
      "USER": {
        "description": "User configuration for personal settings",
        "SSH_PRIVATE_KEY": {
          "label": "SSH Private Key",
          "description": "Base64-encoded SSH private key for user operations"
        },
        "SSH_PUBLIC_KEY": {
          "label": "SSH Public Key",
          "description": "SSH public key for user operations"
        }
      },
      "COMPANY": {
        "description": "Company configuration for organization-wide settings",
        "UNIVERSAL_USER_ID": {
          "label": "Universal User ID",
          "description": "Universal user ID for system operations"
        },
        "UNIVERSAL_USER_NAME": {
          "label": "Universal User Name",
          "description": "Universal user name for system operations"
        },
        "DOCKER_JSON_CONF": {
          "label": "Docker Configuration",
          "description": "Docker registry authentication configuration"
        },
        "SSH_PRIVATE_KEY": {
          "label": "SSH Private Key",
          "description": "Base64-encoded SSH private key for company operations"
        },
        "SSH_PUBLIC_KEY": {
          "label": "SSH Public Key",
          "description": "SSH public key for company operations"
        },
        "LOG_FILE": {
          "label": "Log File Path",
          "description": "Path to the system log file"
        }
      }
    }
  }
}