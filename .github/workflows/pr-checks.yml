name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  pr-validation:
    name: Validate PR
    runs-on: ubuntu-latest

    steps:
      - name: Check PR title format
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title;
            const pattern = /^(feat|fix|docs|style|refactor|perf|test|chore|ci|build|revert)(\(.+\))?: .+/;

            if (!pattern.test(title)) {
              core.setFailed(
                'PR title must follow Conventional Commits format:\n' +
                'type(scope): description\n\n' +
                'Types: feat, fix, docs, style, refactor, perf, test, chore, ci, build, revert\n' +
                'Example: feat(ui): add dark mode toggle'
              );
            } else {
              core.info('✅ PR title follows Conventional Commits format');
            }

      - name: Check PR description
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.pull_request.body || '';

            if (body.length < 20) {
              core.setFailed('PR description is too short. Please provide a detailed description.');
            } else {
              core.info('✅ PR description is adequate');
            }

      - name: Check for linked issues
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.pull_request.body || '';
            const issuePattern = /(close|closes|closed|fix|fixes|fixed|resolve|resolves|resolved|ref|refs)\s+#\d+/i;

            if (!issuePattern.test(body)) {
              core.warning('PR does not reference any issues. Consider linking related issues.');
            } else {
              core.info('✅ PR references issues');
            }

  label-check:
    name: Check Labels
    runs-on: ubuntu-latest

    steps:
      - name: Verify PR has labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(l => l.name);

            if (labels.length === 0) {
              core.warning('PR has no labels. Consider adding appropriate labels.');
            } else {
              core.info(`✅ PR has ${labels.length} label(s): ${labels.join(', ')}`);
            }

  size-check:
    name: PR Size Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            const additions = files.reduce((sum, file) => sum + file.additions, 0);
            const deletions = files.reduce((sum, file) => sum + file.deletions, 0);
            const totalChanges = additions + deletions;
            const fileCount = files.length;

            core.info(`Files changed: ${fileCount}`);
            core.info(`Lines added: ${additions}`);
            core.info(`Lines deleted: ${deletions}`);
            core.info(`Total changes: ${totalChanges}`);

            // Warning thresholds
            if (totalChanges > 1000) {
              core.warning(
                `⚠️ Large PR detected (${totalChanges} lines changed). ` +
                'Consider breaking it into smaller PRs for easier review.'
              );
            }

            if (fileCount > 30) {
              core.warning(
                `⚠️ Many files changed (${fileCount} files). ` +
                'Consider breaking it into smaller PRs.'
              );
            }

            // Add comment summary
            const comment = `## PR Size Summary\n\n` +
              `- **Files changed:** ${fileCount}\n` +
              `- **Lines added:** ${additions}\n` +
              `- **Lines deleted:** ${deletions}\n` +
              `- **Total changes:** ${totalChanges}\n`;

            core.summary.addRaw(comment).write();

  conflict-check:
    name: Check for Conflicts
    runs-on: ubuntu-latest

    steps:
      - name: Check mergeable state
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            if (pr.mergeable_state === 'dirty') {
              core.setFailed('❌ PR has merge conflicts. Please resolve them.');
            } else if (pr.mergeable_state === 'unknown') {
              core.info('⏳ Merge status is being calculated...');
            } else {
              core.info('✅ No merge conflicts detected');
            }
